[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "machine-analyzer"
version = "1.0.0"
description = "A comprehensive machine energy consumption analysis library for production cycle detection and quality assessment"
readme = "docs/README.md"
license = {text = "MIT"}
authors = [
    {name = "Anthony", email = "dylanhinesang@gmail.com"}
]
maintainers = [
    {name = "Anthony", email = "dylanhinesang@gmail.com"}
]
keywords = [
    "machine learning",
    "energy analysis", 
    "time series", 
    "production cycles",
    "quality assessment",
    "anomaly detection",
    "manufacturing",
    "industrial",
    "iot",
    "data analysis"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Manufacturing",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
]
requires-python = ">=3.8"
dependencies = [
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "matplotlib>=3.7.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "pytest-benchmark>=4.0.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "bandit>=1.7.5",
    "safety>=2.3.0",
    "pip-audit>=2.6.0",
    "memory-profiler>=0.61.0",
    "psutil>=5.9.0",
    "locust>=2.15.0",
]
docs = [
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
    "sphinx-autodoc-typehints>=1.24.0",
    "sphinx-copybutton>=0.5.0",
]
notebooks = [
    "jupyter>=1.0.0",
    "jupyterlab>=4.0.0",
    "seaborn>=0.12.0",
    "plotly>=5.15.0",
]
full = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-benchmark>=4.0.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "bandit>=1.7.5",
    "safety>=2.3.0",
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
    "jupyter>=1.0.0",
    "seaborn>=0.12.0",
    "plotly>=5.15.0",
]

[project.urls]
Homepage = "https://github.com/dylan463/machine-analyzer"
Repository = "https://github.com/dylan463/machine-analyzer"
"Bug Tracker" = "https://github.com/dylan463/machine-analyzer/issues"
Changelog = "https://github.com/dylan463/machine-analyzer/blob/main/CHANGELOG.md"

[tool.setuptools.packages.find]
where = ["."]
include = ["machine_analyzer*"]

[tool.setuptools.package-data]
"machine_analyzer" = ["*.txt", "*.json", "*.yaml", "*.yml"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["machine_analyzer"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pandas.*",
    "numpy.*",
    "matplotlib.*",
    "sklearn.*",
    "scipy.*",
    "statsmodels.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["machine_analyzer"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov" 